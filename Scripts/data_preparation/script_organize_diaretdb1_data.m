
config_organize_diaretdb1_data;

%% identify images on the training and test sets

% retrieve training images names
training_images_names_file = fullfile(root_folder, 'diaretdb1_v_1_1', 'resources', 'traindatasets', 'trainset.txt');
training_images_names = textread(training_images_names_file, '%s');
% retrieve test images names
test_images_names_file = fullfile(root_folder, 'diaretdb1_v_1_1', 'resources', 'testdatasets', 'testset.txt');
test_images_names = textread(test_images_names_file, '%s');


%% identify input folder

% images
input_images_path = fullfile(root_folder, 'diaretdb1_v_1_1', 'resources', 'images', 'ddb1_fundusimages');
% microaneurysms
input_ma_labels_path = fullfile(root_folder, 'diaretdb1_v_1_1', 'resources', 'images', 'ddb1_groundtruth', 'redsmalldots');
% hemorrhages
input_hemorrhages_path = fullfile(root_folder, 'diaretdb1_v_1_1', 'resources', 'images', 'ddb1_groundtruth', 'hemorrhages');


%% copy all images, ma and he labels

% copy training images
fprintf('Copying training data...\n');
copy_diaretdb1_files_to_new_folder(training_images_names, ...
    input_images_path, ...
    input_ma_labels_path, ...
    input_hemorrhages_path, ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'images'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'hemorrhages'));
% generate labels following the evaluation protocol
generate_red_lesion_ground_truth_annotations( ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'hemorrhages'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'red-lesions'), ...
    probability_threshold);

% copy test images
fprintf('Copying test data...\n');
copy_diaretdb1_files_to_new_folder(test_images_names, ...
    input_images_path, ...
    input_ma_labels_path, ...
    input_hemorrhages_path, ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'images'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'hemorrhages'))
% generate labels following the evaluation protocol
generate_red_lesion_ground_truth_annotations( ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'hemorrhages'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'red-lesions'), ...
    probability_threshold);

% copy also an additional folder with both the training and test data
fprintf('Copying also an additional folder with both the training and test data...\n');
all_images_names = cat(1, training_images_names, test_images_names);
copy_diaretdb1_files_to_new_folder(all_images_names, ...
    input_images_path, ...
    input_ma_labels_path, ...
    input_hemorrhages_path, ...
    fullfile(output_folder, 'DIARETDB1_full', 'images'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'hemorrhages'))
% generate labels following the evaluation protocol
generate_red_lesion_ground_truth_annotations( ...
    fullfile(output_folder, 'DIARETDB1_full', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'hemorrhages'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'red-lesions'), ...
    probability_threshold);


%% generate FOV masks

% generate FOV masks
fprintf('Generating FOV masks on training data...\n');
root = fullfile(output_folder, 'DIARETDB1', 'train');
threshold = 0.15;
GenerateFOVMasks;
fprintf('Generating FOV masks on test data...\n');
root = fullfile(output_folder, 'DIARETDB1', 'test');
threshold = 0.15;
GenerateFOVMasks;
fprintf('Generating FOV masks on the full data folder data...\n');
root = fullfile(output_folder, 'DIARETDB1_full');
threshold = 0.15;
GenerateFOVMasks;

%% crop around the FOV area

% cropping training data
fprintf('Cropping training data...\n');
% - path where the images to crop are
sourcePaths = { ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'images'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'hemorrhages'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'red-lesions'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'masks') ...
};
% - paths where the images to be cropped will be saved
outputPaths = { ... 
    fullfile(output_folder, 'DIARETDB1', 'train', 'images'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'hemorrhages'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'red-lesions'), ...
    fullfile(output_folder, 'DIARETDB1', 'train', 'masks') ...
};
% - masks to be used to crop the images
maskPaths = fullfile(output_folder, 'DIARETDB1', 'train', 'masks');
% crop!!
script_cropFOVSet;

% cropping training data
fprintf('Cropping test data...\n');
% - path where the images to crop are
sourcePaths = { ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'images'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'hemorrhages'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'red-lesions'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'masks'), ...
};
% - paths where the images to be cropped will be saved
outputPaths = { ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'images'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'hemorrhages'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'red-lesions'), ...
    fullfile(output_folder, 'DIARETDB1', 'test', 'masks'), ...    
};
% - masks to be used to crop the images
maskPaths = fullfile(output_folder, 'DIARETDB1', 'test', 'masks');
% crop!!
script_cropFOVSet;

% cropping full data set
fprintf('Cropping full data set data...\n');
% - path where the images to crop are
sourcePaths = { ...
    fullfile(output_folder, 'DIARETDB1_full', 'images'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'hemorrhages'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'red-lesions'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'masks'), ...
};
% - paths where the images to be cropped will be saved
outputPaths = { ...
    fullfile(output_folder, 'DIARETDB1_full', 'images'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'ma'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'hemorrhages'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'red-lesions'), ...
    fullfile(output_folder, 'DIARETDB1_full', 'masks'), ...    
};
% - masks to be used to crop the images
maskPaths = fullfile(output_folder, 'DIARETDB1_full', 'masks');
% crop!!
script_cropFOVSet;

